{:paths ["dev"]
 :deps  {medley/medley {:mvn/version "1.4.0"}
         selmer/selmer {:mvn/version "1.12.50"}}
 :tasks
 {uberjar {:task (clojure "-X:uberjar")}
  graal   {:task (shell "native-image --enable-url-protocols=http --report-unsupported-elements-at-runtime --no-fallback --no-server -H:ConfigurationResourceRoots=resources -H:ResourceConfigurationFiles=resource-config.json -H:+ReportExceptionStackTraces -Djdk.internal.lambda.eagerlyInitialize=false -J-Dclojure.spec.skip-macros=true -J-Dclojure.compiler.direct-linking=true \"-J-Dclojure.compiler.elide-meta=[:doc :file :line :added]\" -J-Dtech.v3.datatype.graal-native=true -jar ./target/app.jar")}
  -native {:depends [uberjar graal]}
  native  {:task (run '-native)}

  nrepl  x.nrepl/run
  shadow x.shadow/run
  cli    x.cli/run
  css    {:task (clojure "-X:css")}
  -start {:depends [;; nrepl
                    shadow css cli]}
  start  {:task (run '-start {:parallel true})}}}
